# Plugins {{{ #

# Auto install tpm
if "test ! -d ~/.config/tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm'"

set -g @tpm_plugins '         \
  tmux-plugins/tpm            \
  tmux-plugins/tmux-yank      \
  tmux-plugins/tmux-copycat   \
'

run-shell '~/.config/tmux/plugins/tpm/tpm'

# }}} Plugins #

# General {{{ #

# Escape delay fix
set -g escape-time 0

# Enable mouse scrolling
set -g mouse on

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"

# Use vim keybindings in copy mode
setw -g mode-keys vi

set -ga terminal-overrides ',*:Tc'

# }}} General #

# Key bindings {{{ #

# Change prefix to backtick
unbind-key C-b
set -g prefix `

# Double press backtick to type it
bind-key ` send-prefix

# Allow us to reload our tmux configuration while using tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Bind v and s for vertical and horizontal splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"

# Create new window in current directory
bind-key n new-window -c "#{pane_current_path}"

# Next/Previous window bindings
bind-key l next-window
bind-key h previous-window

# Swap windows
bind-key L swap-window -t +1
bind-key H swap-window -t -1

# vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Bind resizing of panes
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# }}} Key bindings #

# Status line optinons {{{ #

# Show status line on top
set-option -g status-position top

# Set first window to index 1 (not 0)
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Re-number windows on close
set-option -g renumber-windows on

# Status line background
set -g status-bg "colour18"

# Status line active/inactive format
setw -g window-status-format "#[fg=colour20,bg=colour18] #I #[fg=colour20,bg=colour18]#W "
setw -g window-status-current-format "#[fg=colour18,bg=colour4,bold] #I #[fg=colour18,bg=colour4,bold]#W "

# Right status format
set -g status-right "#[fg=colour18,bg=colour2,bold] %H:%M "

# Message format
set -g message-bg "colour4"
set -g message-fg "colour18"
set -g message-attr "bold"

# Align
set -g status-justify "left"

# Pane borders colors
set -g pane-border-fg "colour7"
set -g pane-active-border-fg "colour4"

# No left status
set -g status-left ""

# }}} Status line optinons #

# vim: fdm=marker
